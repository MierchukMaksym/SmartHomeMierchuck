from django import forms
from .models import Room, Device, Switch

# --- –ö–æ–º–Ω–∞—Ç—ã ---

ROOM_CHOICES = [
    ('–í—ñ—Ç–∞–ª—å–Ω—è', 'üõãÔ∏è –í—ñ—Ç–∞–ª—å–Ω—è'),
    ('–ö—É—Ö–Ω—è', 'üçΩÔ∏è –ö—É—Ö–Ω—è'),
    ('–°–ø–∞–ª—å–Ω—è', 'üõèÔ∏è –°–ø–∞–ª—å–Ω—è'),
    ('–í–∞–Ω–Ω–∞', 'üõÅ –í–∞–Ω–Ω–∞'),
    ('–ö–∞–±—ñ–Ω–µ—Ç', 'üíª –ö–∞–±—ñ–Ω–µ—Ç'),
]

ICON_MAP = {
    '–í—ñ—Ç–∞–ª—å–Ω—è': 'üõãÔ∏è',
    '–ö—É—Ö–Ω—è': 'üçΩÔ∏è',
    '–°–ø–∞–ª—å–Ω—è': 'üõèÔ∏è',
    '–í–∞–Ω–Ω–∞': 'üõÅ',
    '–ö–∞–±—ñ–Ω–µ—Ç': 'üíª',
}

ALLOWED_DEVICES_BY_ROOM = {
    '–í—ñ—Ç–∞–ª—å–Ω—è': ['tv', 'light', 'climate', 'air_purifier', 'robot_vacuum'],
    '–ö—É—Ö–Ω—è': ['kettle', 'fridge', 'light', 'climate'],
    '–°–ø–∞–ª—å–Ω—è': ['light', 'climate', 'humidifier', 'thermostat'],
    '–í–∞–Ω–Ω–∞': ['washer', 'light', 'humidity', 'ventilation'],
    '–ö–∞–±—ñ–Ω–µ—Ç': ['light', 'climate', 'tv', 'smart_plug'],
}


class RoomForm(forms.ModelForm):
    name = forms.ChoiceField(choices=ROOM_CHOICES, label="–ù–∞–∑–≤–∞ –∫—ñ–º–Ω–∞—Ç–∏")

    class Meta:
        model = Room
        fields = ['name']

    def save(self, commit=True):
        instance = super().save(commit=False)
        instance.icon = ICON_MAP.get(self.cleaned_data['name'], 'üì¶')
        if commit:
            instance.save()
        return instance


# --- –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ---

class AddDeviceForm(forms.Form):
    device_type = forms.ChoiceField(
        choices=Device.DEVICE_TYPES,
        widget=forms.HiddenInput()
    )

    def save(self, room):
        device_type = self.cleaned_data['device_type']
        icon = Device.ICONS.get(device_type, 'üîß')

        if device_type == 'light':
            count = Device.objects.filter(device_type='light').count() + 1
            name = f"–õ–∞–º–ø–∞ {count}"
        else:
            name = dict(Device.DEVICE_TYPES).get(device_type, "–ü—Ä–∏—Å—Ç—Ä—ñ–π")

        return Device.objects.create(
            room=room,
            name=name,
            device_type=device_type,
            icon=icon,
            is_on=False,
        )


# forms.py

from .models import Switch, Device
from django import forms

class AddSwitchForm(forms.ModelForm):
    linked_lamps = forms.ModelMultipleChoiceField(
        queryset=Device.objects.filter(device_type='light'),
        widget=forms.CheckboxSelectMultiple,
        required=False,
        label="–õ–∞–º–ø–∏, —è–∫—ñ –∫–µ—Ä—É—é—Ç—å—Å—è"
    )

    class Meta:
        model = Switch
        fields = ['name', 'icon', 'linked_lamps']

    def save(self, room, commit=True):
        instance = super().save(commit=False)
        instance.room = room
        if commit:
            instance.save()
            self.save_m2m()
        return instance

